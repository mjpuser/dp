version: '3'
services:
  hub:
    image: nginx:alpine
    ports:
      - "3000:3000"
    volumes:
      - ./conf/dev/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - rest
      - iron
      - s3
      - rabbitmq
  rest:
    image: postgrest/postgrest
    ports:
      - 3000
    environment:
      PGRST_DB_URI: postgres://rock:password@rock:5432/rock
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: rock
      PGRST_SERVER_PROXY_URI: "http://127.0.0.1:3000"
    depends_on:
      - rock
  rock:
    image: postgres
    ports:
      - 5432
    environment:
      POSTGRES_DB: rock
      POSTGRES_USER: rock
      POSTGRES_PASSWORD: password
    volumes:
      - "./rock/initdb:/docker-entrypoint-initdb.d"
      # - "rock-data:/var/lib/postgresql/data"
  iron:
    image: nikolaik/python-nodejs:python3.8-nodejs14-alpine
    ports:
      - 3000
    depends_on:
      - rest
    volumes:
      - "./iron:/app"
    working_dir: /app
    command: sh -c 'yarn install --frozen-lockfile && yarn dev'
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 15672
    volumes:
      - ./conf/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - ./conf/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
  s3:
    image: minio/minio
    ports:
      - 9000
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio678
    command: server /data
    depends_on:
      - rabbitmq
  s3-config:
    image: minio/mc
    volumes:
      - ./conf/s3/init.sh:/init.sh
    entrypoint: /init.sh
    depends_on:
      - s3
      - rabbitmq
  vertex:
    build:
      context: ./vertex
    environment:
      PIPENV_VENV_IN_PROJECT: enabled
    depends_on:
      - rabbitmq
      - rest
    volumes:
      - "./vertex:/app"
      - "./conf/dev/vertex/start.sh:/start.sh"
    working_dir: /app
    tty: true
    restart: always
    command: /start.sh


volumes:
  rock-data:
